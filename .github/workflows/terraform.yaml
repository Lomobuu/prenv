name: 'Terraform Deployment'

on:
  push:
    branches:
      - dev
  pull_request:
    branches:
      - main    # only run on PRs targeting main
    types: [opened, reopened, synchronize]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Target environment'
        required: true
        type: choice
        options:
          - dev
          - test
          - main

permissions:
  id-token: write
  contents: read

env:
  location: westeurope
  ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}

jobs:
  terraform:
    name: Deploy Terraform
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment || 'dev' }}
    defaults:
      run:
        working-directory: .github/Terraform
        shell: bash

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Determine environment & container
        id: env
        run: |
          if [ "${{ github.event_name }}" == "pull_request" ]; then
            ENVIRONMENT="pr${{ github.event.pull_request.number }}"
            CONTAINER_NAME="tfstate-${ENVIRONMENT}"
          else
            ENVIRONMENT="${{ github.event.inputs.environment || 'dev' }}"
            CONTAINER_NAME="tfstate-$(echo "$ENVIRONMENT" | tr '[:upper:]' '[:lower:]')"
          fi

          echo "Environment: $ENVIRONMENT"
          echo "Container: $CONTAINER_NAME"

          echo "environment=$ENVIRONMENT" >> $GITHUB_OUTPUT
          echo "container_name=$CONTAINER_NAME" >> $GITHUB_OUTPUT

      - name: Terraform Init
        run: |
          terraform init \
            -backend-config="resource_group_name=prenv-management-RG" \
            -backend-config="storage_account_name=tfstateprenvfozzen" \
            -backend-config="container_name=${{ steps.env.outputs.container_name }}" \
            -backend-config="key=terraform.tfstate" \
            -backend-config="use_oidc=true"

      - name: Terraform Format
        run: terraform fmt -recursive

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        run: terraform plan -input=false -var location=$location -var environment=${{ steps.env.outputs.environment }}

      - name: Terraform Apply
        run: terraform apply -auto-approve -input=false -var location=$location -var environment=${{ steps.env.outputs.environment }}